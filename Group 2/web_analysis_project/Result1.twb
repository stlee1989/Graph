<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0917.1648                               -->
<workbook original-version='18.1' source-build='2019.2.4 (20192.19.0917.1648)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='routesAsean.csv+ (Multiple Connections)' inline='true' name='federated.02jf3ue0x14x9s1e0wl9c0j99esm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='routesAsean' name='textscan.1vra5wo0n6qcaz1b4ftas0p9achp'>
            <connection class='textscan' directory='E:/南洋理工/Web Analysis' filename='routesAsean.csv' password='' server='' />
          </named-connection>
          <named-connection caption='statAsean' name='textscan.1p89bvi18medqb16vg8ka1wuxyp2'>
            <connection class='textscan' directory='E:/南洋理工/Web Analysis' filename='statAsean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[routesAsean.csv].[APT]' />
              <expression op='[statAsean.csv].[APT]' />
            </expression>
          </clause>
          <relation connection='textscan.1vra5wo0n6qcaz1b4ftas0p9achp' name='routesAsean.csv' table='[routesAsean#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Airline' ordinal='1' />
              <column datatype='integer' name='Airline ID' ordinal='2' />
              <column datatype='string' name='Source airport' ordinal='3' />
              <column datatype='integer' name='Source airport ID' ordinal='4' />
              <column datatype='string' name='Destination airport' ordinal='5' />
              <column datatype='integer' name='Destination airport ID' ordinal='6' />
              <column datatype='string' name='Codeshare' ordinal='7' />
              <column datatype='integer' name='Stops' ordinal='8' />
              <column datatype='string' name='Equipment' ordinal='9' />
              <column datatype='real' name='Source latitude' ordinal='10' />
              <column datatype='real' name='Source longitude' ordinal='11' />
              <column datatype='real' name='Destination latitude' ordinal='12' />
              <column datatype='real' name='Destination longitude' ordinal='13' />
              <column datatype='real' name='Distance' ordinal='14' />
              <column datatype='integer' name='Link' ordinal='15' />
              <column datatype='real' name='latitude' ordinal='16' />
              <column datatype='real' name='longitude' ordinal='17' />
              <column datatype='string' name='APT' ordinal='18' />
            </columns>
          </relation>
          <relation connection='textscan.1p89bvi18medqb16vg8ka1wuxyp2' name='statAsean.csv' table='[statAsean#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='APT' ordinal='1' />
              <column datatype='integer' name='Deg' ordinal='2' />
              <column datatype='real' name='BET' ordinal='3' />
              <column datatype='integer' name='Airport ID' ordinal='4' />
              <column datatype='string' name='Name' ordinal='5' />
              <column datatype='string' name='City' ordinal='6' />
              <column datatype='string' name='Country' ordinal='7' />
              <column datatype='string' name='ICAO' ordinal='8' />
              <column datatype='real' name='Latitude' ordinal='9' />
              <column datatype='real' name='Longitude' ordinal='10' />
              <column datatype='integer' name='Altitude' ordinal='11' />
              <column datatype='real' name='Timezone' ordinal='12' />
              <column datatype='string' name='DST' ordinal='13' />
              <column datatype='string' name='TZ' ordinal='14' />
              <column datatype='string' name='Type' ordinal='15' />
              <column datatype='string' name='Source' ordinal='16' />
              <column datatype='real' name='Eigen' ordinal='17' />
              <column datatype='real' name='CC' ordinal='18' />
              <column datatype='real' name='HUBAUTH' ordinal='19' />
              <column datatype='real' name='PAGERANK' ordinal='20' />
              <column datatype='integer' name='CommGM' ordinal='21' />
              <column datatype='integer' name='CommLV' ordinal='22' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[APT (statAsean.csv)]' value='[statAsean.csv].[APT]' />
          <map key='[APT]' value='[routesAsean.csv].[APT]' />
          <map key='[Airline ID]' value='[routesAsean.csv].[Airline ID]' />
          <map key='[Airline]' value='[routesAsean.csv].[Airline]' />
          <map key='[Airport ID]' value='[statAsean.csv].[Airport ID]' />
          <map key='[Altitude]' value='[statAsean.csv].[Altitude]' />
          <map key='[BET]' value='[statAsean.csv].[BET]' />
          <map key='[CC]' value='[statAsean.csv].[CC]' />
          <map key='[City]' value='[statAsean.csv].[City]' />
          <map key='[Codeshare]' value='[routesAsean.csv].[Codeshare]' />
          <map key='[CommGM]' value='[statAsean.csv].[CommGM]' />
          <map key='[CommLV]' value='[statAsean.csv].[CommLV]' />
          <map key='[Country]' value='[statAsean.csv].[Country]' />
          <map key='[DST]' value='[statAsean.csv].[DST]' />
          <map key='[Deg]' value='[statAsean.csv].[Deg]' />
          <map key='[Destination airport ID]' value='[routesAsean.csv].[Destination airport ID]' />
          <map key='[Destination airport]' value='[routesAsean.csv].[Destination airport]' />
          <map key='[Destination latitude]' value='[routesAsean.csv].[Destination latitude]' />
          <map key='[Destination longitude]' value='[routesAsean.csv].[Destination longitude]' />
          <map key='[Distance]' value='[routesAsean.csv].[Distance]' />
          <map key='[Eigen]' value='[statAsean.csv].[Eigen]' />
          <map key='[Equipment]' value='[routesAsean.csv].[Equipment]' />
          <map key='[F1 (statAsean.csv)]' value='[statAsean.csv].[F1]' />
          <map key='[F1]' value='[routesAsean.csv].[F1]' />
          <map key='[HUBAUTH]' value='[statAsean.csv].[HUBAUTH]' />
          <map key='[ICAO]' value='[statAsean.csv].[ICAO]' />
          <map key='[Latitude]' value='[statAsean.csv].[Latitude]' />
          <map key='[Link]' value='[routesAsean.csv].[Link]' />
          <map key='[Longitude]' value='[statAsean.csv].[Longitude]' />
          <map key='[Name]' value='[statAsean.csv].[Name]' />
          <map key='[PAGERANK]' value='[statAsean.csv].[PAGERANK]' />
          <map key='[Source airport ID]' value='[routesAsean.csv].[Source airport ID]' />
          <map key='[Source airport]' value='[routesAsean.csv].[Source airport]' />
          <map key='[Source latitude]' value='[routesAsean.csv].[Source latitude]' />
          <map key='[Source longitude]' value='[routesAsean.csv].[Source longitude]' />
          <map key='[Source]' value='[statAsean.csv].[Source]' />
          <map key='[Stops]' value='[routesAsean.csv].[Stops]' />
          <map key='[TZ]' value='[statAsean.csv].[TZ]' />
          <map key='[Timezone]' value='[statAsean.csv].[Timezone]' />
          <map key='[Type]' value='[statAsean.csv].[Type]' />
          <map key='[latitude]' value='[routesAsean.csv].[latitude]' />
          <map key='[longitude]' value='[routesAsean.csv].[longitude]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Airline</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Airline ID]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Airline ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Source airport]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Source airport</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source airport ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Source airport ID]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Source airport ID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Destination airport]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Destination airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination airport ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Destination airport ID]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Destination airport ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Codeshare</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Codeshare]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Codeshare</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stops</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stops]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Stops</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Equipment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Equipment]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Equipment</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Source latitude]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Source latitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Source longitude]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Source longitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Destination latitude]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Destination latitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Destination longitude]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Destination longitude</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Link</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Link]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>Link</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>APT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[APT]</local-name>
            <parent-name>[routesAsean.csv]</parent-name>
            <remote-alias>APT</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (statAsean.csv)]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>APT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[APT (statAsean.csv)]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>APT</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deg</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deg]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>Deg</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BET</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BET]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>BET</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Airport ID]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>Airport ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICAO</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ICAO]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>ICAO</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Altitude</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Altitude]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>Altitude</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timezone</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Timezone]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>Timezone</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DST</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DST]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>DST</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TZ</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TZ]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>TZ</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Eigen</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Eigen]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>Eigen</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CC</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CC]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>CC</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HUBAUTH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HUBAUTH]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>HUBAUTH</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAGERANK</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAGERANK]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>PAGERANK</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CommGM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CommGM]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>CommGM</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CommLV</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CommLV]</local-name>
            <parent-name>[statAsean.csv]</parent-name>
            <remote-alias>CommLV</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[APT]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Airline ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Airport ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[CommGM]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[CommLV]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Destination latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Destination longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[ICAO]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='integer' name='[Link (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Link]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Link]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' datatype='real' name='[Source latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Source longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column-instance column='[APT]' derivation='None' name='[none:APT:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.543956' measure-ordering='alphabetic' measure-percentage='0.456044' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:APT:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;BFV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CEI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DVO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KBR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LDU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MKQ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ODY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PSJ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SXK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UBP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ZAM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AKY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BTU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DGT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IAO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KTG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LWY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NAW&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PKZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SJI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TMC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VII&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BCD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BXU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DLI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JOG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KYP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MDC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NTX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PNK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SOQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TTE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WGP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BKM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CJM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GTO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KET&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LKH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MNL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PBU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;REP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TBB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;URT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BIK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CGK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ENE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KBV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LGK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MKW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OKL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PXU&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SZB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UIH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ZVK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BDJ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CAH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DMK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JOL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LAO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MDL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NYT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PPS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SRG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TUG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WMX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BTH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CYZ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HPH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KOS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LUV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MZV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PKU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SGN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TJQ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VCL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AMQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BUW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DIN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ILO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KUA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LXG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NBX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PLM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SNO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TNJ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VKG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BPN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CXR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HGN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KOE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LPQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MYT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PHS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SBW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;THS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UTP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BDO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CBO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DPL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KAW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LBJ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MGZ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NYU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PQC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SUB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TVY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WNP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BKS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CNX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HAN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KKC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LMN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MOF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PDG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RGN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TDX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;USM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BMU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CRK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HDY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KLO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LOE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MPH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PEN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ROI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TGG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;USU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BSO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HKT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KOP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LPT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MYY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PKN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SDK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TIM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VCA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BTJ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DAD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HUI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KTE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LUW&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NAH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PKY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SIN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TKG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VCS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BKI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CGM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FKQ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KCH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LGL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MLG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OZC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PYY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TAC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;UNN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BEJ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CEB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DPS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KAZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LBU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MKM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ODN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PRH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SUG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TWU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;XKH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AOR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BWN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DJB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IPH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KUD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MAQ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NNT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PLW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SNW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TRK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VRC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BMV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CRM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HEH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KNG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LOP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MUR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PGK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RXS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;THL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UTH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BKK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CGY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GES&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KDI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LGP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MNA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PAG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RDN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TAG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;UPG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BBN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BXB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DJJ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JHB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KUL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MBT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PNH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SOC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VTE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='routesAsean.csv+ (Multiple Connections)' name='federated.02jf3ue0x14x9s1e0wl9c0j99esm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02jf3ue0x14x9s1e0wl9c0j99esm'>
            <column datatype='string' name='[APT]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[CommLV]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Destination airport]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column datatype='integer' name='[Link (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Link]' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Link]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Source airport]' role='dimension' type='nominal' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Link (copy)]' derivation='Count' name='[cnt:Link (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[APT]' derivation='None' name='[none:APT:nk]' pivot='key' type='nominal' />
            <column-instance column='[CommLV]' derivation='None' name='[none:CommLV:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Destination airport]' derivation='None' name='[none:Destination airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Link]' derivation='None' name='[none:Link:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Source airport]' derivation='None' name='[none:Source airport:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Longitude:qk]' field-type='quantitative' max='18256317.886818714' min='9559564.5983614847' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Latitude:qk]' field-type='quantitative' max='3429782.1118035507' min='-1636218.545373363' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Longitude:qk]' field-type='quantitative' fold='true' max='18256317.886818714' min='9559564.5983614847' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='1' field='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Latitude:qk]' field-type='quantitative' fold='true' max='3429782.1118035507' min='-1636218.545373363' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[cnt:Link (copy):qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.14193369448184967' />
                <format attr='mark-color' value='#9d7660' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Latitude:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <path column='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:Link:ok]' />
              <lod column='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:Destination airport:nk]' />
              <lod column='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:Source airport:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.14193369448184967' />
                <format attr='mark-color' value='#79706e' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Latitude:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:CommLV:ok]' />
              <size column='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[cnt:Link (copy):qk]' />
              <text column='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:APT:nk]' />
              <lod column='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:APT:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.2872927188873291' />
                <format attr='mark-color' value='#9d7660' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Latitude:qk] + [federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Latitude:qk])</rows>
        <cols>([federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Longitude:qk] + [federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Longitude:qk])</cols>
      </table>
      <simple-id uuid='{FAE3A553-0A8E-454B-8CCF-77972E8FFB47}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='routesAsean.csv+ (Multiple Connections)' name='federated.02jf3ue0x14x9s1e0wl9c0j99esm' />
          </datasources>
          <datasource-dependencies datasource='federated.02jf3ue0x14x9s1e0wl9c0j99esm'>
            <column datatype='string' name='[APT]' role='dimension' type='nominal' />
            <column datatype='real' name='[CC]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deg]' role='measure' type='quantitative' />
            <column-instance column='[CC]' derivation='Avg' name='[avg:CC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deg]' derivation='Avg' name='[avg:Deg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[APT]' derivation='None' name='[none:APT:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Deg:qk]' included-values='in-range'>
            <min>15.0</min>
            <max>48.0</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:APT:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Deg:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Deg:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Deg:qk]' value='27' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:APT:nk]' value='68' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:CC:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:CC:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:APT:nk]</rows>
        <cols>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Deg:qk]</cols>
      </table>
      <simple-id uuid='{4E41DEE5-D915-4841-86A0-D116665CF40C}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='routesAsean.csv+ (Multiple Connections)' name='federated.02jf3ue0x14x9s1e0wl9c0j99esm' />
          </datasources>
          <datasource-dependencies datasource='federated.02jf3ue0x14x9s1e0wl9c0j99esm'>
            <column datatype='string' name='[APT]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Deg]' role='measure' type='quantitative' />
            <column datatype='real' name='[PAGERANK]' role='measure' type='quantitative' />
            <column-instance column='[Deg]' derivation='Avg' name='[avg:Deg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAGERANK]' derivation='Avg' name='[avg:PAGERANK:qk]' pivot='key' type='quantitative' />
            <column-instance column='[APT]' derivation='None' name='[none:APT:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:APT:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:PAGERANK:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:APT:nk]' value='34' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Deg:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Deg:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:APT:nk]</rows>
        <cols>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:PAGERANK:qk]</cols>
      </table>
      <simple-id uuid='{4F175A4C-A031-4069-85B6-8ED4AD32DBD0}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[cnt:Link (copy):qk]' type='size' />
            <card pane-specification-id='2' param='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:CommLV:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[cnt:F1:qk]</field>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[cnt:Link (copy):qk]</field>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:APT:nk]</field>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:Airport ID:ok]</field>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:CommGM:ok]</field>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:CommLV:ok]</field>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:F1:ok]</field>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:Link:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{43308E87-92CA-4EA5-B764-30AD695C093C}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:CC:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:CC:qk]</field>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:APT:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1652D060-ECEC-43C5-B6E7-3AB9B24BE0B8}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Deg:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[avg:Deg:qk]</field>
            <field>[federated.02jf3ue0x14x9s1e0wl9c0j99esm].[none:APT:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{268C92F1-528B-47A3-879E-879C8BEC1FCA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAANwElEQVR4nO3dSW9cV2LF8f8baiJZZBVZpKiRckuxLA+xYXfSSQfIKsg3yMfoXRBkaWQT
      oFdZ9yLbAPkGQYIYnaFjpO14FCXOZHEmxamKNb7hZiE5aMMhXfWKTyJ5z28ll05dXso8fOOt
      5xhjDCKWcl/3BEReJxVArKYCiNVUALGaCiBWUwHEaqkWII5j5ZV/JfkkYxtj0i1Av5cYLtM/
      qPJXK590bCfNC2FhbQe+/see88bEOE7vnVRe+eRjGxzHwe/5HUl0TjFLn/T1ln7bqLzyg4yt
      g2CxmgogVlMBxGoqgFhtoIPg7Z1tfBMSRhG58h1az7fxPEPp5j3y3kVNUSQ9AxVgf7tK7I9x
      v+LTCg3NZgPfN4xqhYFcEQPtAhVLFQpuSOhkqR8f0A5CHGNotVvEWmcjV8BAW4Bbt26T8Tw6
      kcEc7ZN78JCM6bB7sEcxf1cHGHLpDVSAXC4PQMGHwvTtl6/muT8yBkA40NRE0qdf0mI1FUCs
      pgKI1dK9Gc7LwNjdPt5gAEd55RPkk42d6u3QURTheb1fEQvDEN/vvZPKKz/I2J7naRdI7KYC
      iNXSPQZo14hX/6v3fBwTu310UnnlBxjbuG66BTCNA8xvftXXe/pb2am88oONrV0gsZoKIFZT
      AcRqKoBYbaCD4Dho8WxhhWJ5krwHvmkR5iehW2dycuqi5iiSmoG2AK3aEe3YY3KizMHBAc1O
      wM5GlecHBxc1P5FUDVSA/Ngkj+7fZHb26ctXHKYrRXYOahcwNZH0DbYLFAVsbGxy5+49Mk5M
      JuNSGB7ljXZwUfMTSdVABcjkhnj01uMfvH5/ZmaQYUVeGZ0FEqupAGI1FUCspgKI1dJdERYG
      uCbqPd/nCjLllR907HTXAzgujp/pIx/i9LGsTXnlBxkbLYkU26W7ICbuEnV2e87HUUTUx2ZM
      eeWTjm2iiNhz0z0GCE5X6S7/bVrDiwxMu0BiNRVArKYCiNVUALFaogLEUcDO3j5g2NzcpH58
      SKMdUK/XaZ7WCfv9fAqR1yTRadCo2+Hp3DyToxm+nV3mzTemaZoj/DAg7xsm33iMr22LXAGJ
      f0xvlQt88WyLm9MTOK5PqeBw1NBCGLlaEhXA9TJM3nmDkYLP1ESZkZERpm/fp+Ab8oU8Swtz
      dALtB8nlpwthYjXtqYvVVACxmgogVlMBxGqpHgSHQROns95z/jKtMFL+auX7HjuOcdN+QIbj
      5vBGHvWcN2GI18eqHuWVH2hsrQgT26kAYrV0jwGeLxL/y1+lNbzIwLQFEKupAGI1FUCspgKI
      1QYqQKfVpNFsY+KIk+NjwigmDEPCICBO79ha5MIkLkDcrfNkboVGs8n801nqjSanzRbV6gpz
      c/Pox1+ugsQFaB/vMX73IVOVcWLXJ+fG7O3vs1NdIlucwHOci5ynSCoSF6BQucvJ2hNW1rcY
      znrsHdXw/Qz3Hr6DH5zQ1oowuQIS3wvkuFne//DDczNh0sFFXhGdBRKrqQBiNRVArKYCiNXS
      vRu0cYhT/XXP+Tg2uG7vp0+VV37QsdN9SF6fy9TCMMTvY1WP8soPMrZWhIn1VACxWrofjdjY
      JFz7+57zxkA/d1Aor/ygY6f7nOC4S9xY7est/bZReeUHGVu7QGI1FUCspgKI1VQAsVqig+D9
      taesHsWMFkcwjecUbz2E032OOobRQpZOs8n9N9+66LmKXLhEWwADPHj0Dl7YwR8p0Tp+TisE
      n5CN5VkYGifTx2VpkdclWQHiiOrqEl08XMfFDZt4hVEAbs78HkFtj46elSpXQKJdoMmZx5SC
      kEw2++KKAgYcF0wFAAcwjkN0gRMVSUOiAriuRy738ia337389jt/dkAFkEtPZ4HEaiqAWE0F
      EKulezOcN4RX/qjnuDEGp49b+pRXftCxtSJM+WuR14owkQRUALFaup8KcbiG+fUve3/DZVpi
      pPzVyiccO92D4CiA2laqX0JkENoFEqupAGI1FUCspgKI1RIfBJs44r8//Q2un+PWZIXsWInj
      WpsMbdqNFg8ev42WxMhlN9AWIDYxUQyYLp9/M8dPZm6xtTqHV6xoRZhcCQMVwMHB8yCKPT58
      7xELy1VuzrxJVN/TM8LkShjgGWEef/Qnf/q916bGx7/333pGmFx2OggWq6kAYjUVQKymAojV
      0r0ZLlfEefhnPceNiXGc3jupvPKDja0VYcpfk7xWhIkkoAKI1VI9BjD1faLP/6GPNxiiPlf1
      KK88QDx2B376F72P/VK6B8GdU8xC7w/Khsv1zCnlr07e3HwvUQG0CyRWUwHEaiqAWE0FEKsl
      PgheW57ntBUyc/8uq8urZIZGKWU7tP1JnKDGvXszFzlPkVQk3gJEYYjjZzne32b63n2iMCA0
      PqfHe9QbjYuco0hqEhegXLlB0WlRDzwODk4IOk0A7tyssLn9/MImKJKmxLtAWd/DG5vmrakK
      J4f7BKUZxkby+JkcP/vo/Yuco0hqEhdgeLTE8IsHQ1KamPre342NjQ00KZFXRWeBxGoqgFhN
      BRCrpXsznJ+FcV0PkPQ5xRvJ3qcVYcpfh7xWhIkkoAKI1dJdEdY8IZj9j57zcRxj3N47qfz1
      zvPoj6E02Xs+gXQLUDsg+Kdf9fWeqM+vofz1zfvTD1IvgHaBxGoqgFhNBRCrqQBitWQHwXHI
      3kGNUgGabpHgeAdnqIzbOSTMTUK3xtRUsitzIq9SsgKYiOXFRcqFiPzdD+jU69DoMpyDw+dV
      fC9WAeRKSLwLNDQyykS5RNypsbt/zNbOHgaHm5UiOwe1i5yjSGqSbQFcn7t3bzGSA1oxP/2D
      P8S067Qdj7GRIj/p6OlgcjUkK4DjUS69WA5WKbx8LVdm6OUfZ+7dG3xmIq+AzgKJ1VQAsZoK
      IFZTAcRq6a4IC0Nc4j7yEZ7f+woy5a953jj4mUxP2aQrwtJdE+w4OF62jzeEOH18E8pf83yY
      /ul07QKJ1dJdENNtE+xWe87HUYzx+lhhpPy1zjN5B/xi7/kEUi1AtL/F6d/9ZZpfQq6x4V/8
      ksyDd1L9GtoFEqupAGI1FUCspgKI1RIXwJguz759wv5RjW7zhCezTzmut9jf3mBlffsi5yiS
      msRngUzcws2UOdmp0h3KMn77AZvrz2ieBrzz3tsXOUeR1Ay4C+QwPFwgDEKWF+YoTdzm8aP7
      fP3lE4KLmZ9IqpJfB3Ay1I+38XJTTFeKlG5PMFaA+dk5iuUSPtC9uHmKpCJxAVx3iI9+9uEP
      Xn/zbe3+yNWhs0BiNRVArKYCiNVUALFaqivCwmYDs73Scz6KY7w+HqCg/PXOMz1DZri326Ev
      5YowJ5fHf/Bu7/k+vwnlr3c+1IowkXSluyYYgzF9PBTHxMor/0qluyTyZI3uv/91X++5TM+o
      Uv715p2f/w1MPu7zK/RHu0BiNRVArKYCiNVUALHaQAfBQbdNsx2Sz7qcNlqMjBRpNOrk8sMM
      D+Uvao4iqRlgSWTM7OwsrVaL1WqVMAwxrUNWd0948vTpRc5RJDXJCxC3yRfGmb4xCWGXw8ND
      giimdnwEfX0krsjrk7gAjlvABCfMLazgZ198AG6MSzbj4fXz8Xcir1HiYwDHcXjr3fd/8PrP
      J6b/78/aCshlp1/VYjUVQKyW7s1w2SLM/HnPcWMMjuMor/wL2VGiqLe7h+I47jn73VziOE75
      EUlRhOf18Ugc5ZVPmE8ytuu66e4Cuf2s/lFe+QHyScdOdQsgctl5H3/88cdpfoHt6jJLK6sY
      f4jiObdHtOrHLCwu8fykweRE+UfHNVHAf37yz4zdeki+hyOZ/a0qy9Uthopj5DI/vqmsLs9T
      Xd+kFTqURofPzR7ubfHN3DKTIz5fPFmg3uxSGR87M7+++ISNow55OiwuLVJvOYyXRs7Mb67M
      s7Z3wo2JMf7n038jLlQYHTr74YPb6yssbewx7EfMLa6SyQ9TyJ+d391cY35ti2zYYG51ndpp
      58z5G2NYmptlaXWLoF1jbXUFd2iC4XP+JyzNz7K4tE42C6srizSDHKXRwpn5lcVnzM+vcuP2
      DT795F8ZmbpNIfv/j984OWBhaYnjepfdjWVq7Zjx0uiZYzfrR8wvLnFYO2VtYT79s0Cn3Yj3
      332HRv343Fx+ZJThvE+5/OM//ACrSwuUJiboBr19CunW7i4+AYdHtZ7ynmMIwi6O++PtGp+6
      RXEoy8HuCW998Pt4Uefc/K27M2RcKJbGyfo+5fL5C79v3p0h68HO+gr50XG63fO/5+k7M+R9
      2N3cxvFcDg6Pzs3fuD1DIePg+S5BEIBz9o+F40ClMkGxVCIIXd7/4DG1vefnjj9ZqVAslRgf
      r+C7PuVzyv5dfqRUYnt5geLEFN3u2WuDh4olChmfUslnf6/ByeEB4TkXoAojYwznMpTLZQxx
      +gUY8h2++vYJheGzfyMC7K7Ns/G8gYl7u3w2Whqn227Sap//w/adSqlENzLEprfx292AXDZH
      p9380eze1jrVahW34PP0y68JnPOebRtTXVlmbXWF2W++4rgdE8fnnb0wrK8us7a2ipMfxQnb
      NFvtc/Oba8usVdcolEoE3RBz7vds2KouU61W2T9skM/nCLtn/5saE/LZZ1/hAr4b8tWXs4xU
      xs8ZP+Szz77EBWa/+pxm5BJH5y12D/ntb7/Ac2BobJy40zj3+91YnGW31sGYPCOj/otll+eM
      vrPyjI3DBiZsE8Ue/wviRSc7GxAHkwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
