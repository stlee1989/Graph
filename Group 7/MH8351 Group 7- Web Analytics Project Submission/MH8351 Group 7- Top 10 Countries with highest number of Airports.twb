<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Route' inline='true' name='federated.0nyzgk91g7ho8o14bajzp13cr7jd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Route' name='textscan.0f1f3xw1c0ltsq1btq18q0r1q4xx'>
            <connection class='textscan' directory='C:/Users/CK/Desktop/Web Analytics/Our Data' filename='Route.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0f1f3xw1c0ltsq1btq18q0r1q4xx' name='Airport.csv' table='[Airport#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='Country' ordinal='3' />
            <column datatype='string' name='IATA' ordinal='4' />
            <column datatype='string' name='ICAO' ordinal='5' />
            <column datatype='real' name='Latitude' ordinal='6' />
            <column datatype='real' name='Longitude' ordinal='7' />
            <column datatype='integer' name='Altitude' ordinal='8' />
            <column datatype='real' name='Timezone' ordinal='9' />
            <column datatype='string' name='DST' ordinal='10' />
            <column datatype='string' name='Tz database' ordinal='11' />
            <column datatype='string' name='Type' ordinal='12' />
            <column datatype='string' name='Source' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IATA]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>IATA</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICAO</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ICAO]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>ICAO</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Altitude</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Altitude]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>Altitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timezone</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Timezone]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>Timezone</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DST</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DST]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>DST</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tz database</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tz database]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>Tz database</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[Airport.csv]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Iata' datatype='string' name='[IATA]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='Icao' datatype='string' name='[ICAO]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, City' />
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.593893' measure-ordering='alphabetic' measure-percentage='0.406107' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Indian Ocean Territory&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Johnston Atoll&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Bank&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cocos (Keeling) Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Midway Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norfolk Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wake Island&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Svalbard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Airports by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Route' name='federated.0nyzgk91g7ho8o14bajzp13cr7jd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0nyzgk91g7ho8o14bajzp13cr7jd'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[none:Country:nk]' />
              <tooltip column='[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1988949775695801' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[Latitude (generated)]</rows>
        <cols>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[Longitude (generated)]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[none:Country:nk]</field>
                  <field>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[Latitude (generated)]</field>
                  <field>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Russia&quot;</value>
                <value>64.736000000000004</value>
                <value>104.062</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' maximized='true' name='Airports by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[none:City:nk]</field>
            <field>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[none:Country:nk]</field>
            <field>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[none:Destination airport:nk]</field>
            <field>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[none:IATA:nk]</field>
            <field>[federated.0nyzgk91g7ho8o14bajzp13cr7jd].[none:ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airports by Country' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
